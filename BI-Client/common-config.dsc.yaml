# yaml-language-server: $schema=https://aka.ms/configuration-dsc-schema/0.2
properties:
  configurationVersion: 0.2.0
  ########################################
  ### RESOURCES: System Configuration
  ########################################
  resources:
    # Creates a new Dev Drive
    ### -------------------------------------
    - resource: Disk
      id: DevDrive1
      directives:
        module: StorageDsc
        allowPrerelease: true
      settings:
        DiskId: '0'
        DiskIdType: 'Number'
        DriveLetter: 'Z'
        FSLabel: 'Dev Drive 1'
        DevDrive: true
        AllowDestructive: true
        FSFormat: 'ReFS'
        Size: '50GB'
    ### Install Git
    ### -------------------------------------
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      id: git
      directives:
        allowPrerelease: true
      settings:
        id: Microsoft.Git
    ### Configure Git to use Default WAM account
    ### -------------------------------------
    - resource: PSDscResources/Script
      dependsOn:
        - git
      directives:
        description: Configure Git to use Default WAM account
      settings:
        SetScript: |
          $env:Path = [System.Environment]::GetEnvironmentVariable("Path","Machine") + ";" + [System.Environment]::GetEnvironmentVariable("Path","User")
          [Environment]::SetEnvironmentVariable('GCM_MSAUTH_USEDEFAULTACCOUNT','true','Machine')
          git config --global credential.msauthUseDefaultAccount true
        GetScript: return $false
        TestScript: return $false

    ### Configure GCM for self-hosted GitLab OAuth
    - resource: PSDscResources/Script
      id: gitlabOauthConfig
      dependsOn:
        - git
      directives:
        description: Konfiguriert GCM f√ºr selbst-gehostetes GitLab (OAuth)
      settings:
        SetScript: |
          $domain = "%gitlab.bankfrick.li"
          $clientId = "%gitlab_oauth_client_id%"
          git config --global credential.https://$domain.oauthClientId "$clientId"
          git config --global credential.https://$domain.oauthScopes "read_repository write_repository"
        TestScript: |
          $domain = "%gitlab_domain%"
          $id = git config --global --get credential.https://$domain.oauthClientId
          return ($id -eq "%gitlab_oauth_client_id%")
        GetScript: return $false